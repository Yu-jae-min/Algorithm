/*
    # 문제
    약수의 합

    # 문제 설명
    정수 n을 입력받아 n의 약수를 모두 더한 값을 리턴하는 함수, solution을 완성해주세요.

    # 제한 조건
    n은 0 이상 3000이하인 정수입니다.

    # 입출력 예
    n	    return
    12	    28
    5	    6

    # 입출력 예 설명
    입출력 예 #1
    12의 약수는 1, 2, 3, 4, 6, 12입니다. 이를 모두 더하면 28입니다.

    입출력 예 #2
    5의 약수는 1, 5입니다. 이를 모두 더하면 6입니다.
*/

const test01 = (n) => {
    let result = 0;

    for(let i = 1; i <= n; i++){
        if(n%i === 0) result += i;
    }

    return result;
}

console.log(test01(12));

  /*
      # 문제풀이 - test01
      1. 누적하여 더해줄 변수를 만든다.
      2. 반복문을 통해 반복시키며 파라미터를 증감하는 값으로 나누었을 때 나누어 떨어지는 경우 변수에 누적하여 더해준다.
  */

function test02(n, a=0, b=0) {
    return n <= a/2 ? b : test02(n, a+1, b += n%a ? 0 : a);
}

console.log(test02(12));

  /*
      # 문제풀이 - test02
      다른사람의 풀이이다. 삼항연산자를 사용하였으며 재귀함수를 사용하는데 파라미터에 삼항연산자를 추가로 사용하였다.
  */

  /*
      # 문제풀이 비교
      함수 실행 속도 : test02 > test01
      test02의 실행 속도가 더 빨랐다. 하지만 test01이 가독성이 더 높았던 것 같다.
      하지만 매우 기발한 풀이라고 생각했다.
  */
/*
  # 문제
  나머지가 1이 되는 수 찾기

  # 문제 설명
  자연수 n이 매개변수로 주어집니다. n을 x로 나눈 나머지가 1이 되도록 하는 가장 작은 자연수 x를 return 하도록 solution 함수를 완성해주세요.
  답이 항상 존재함은 증명될 수 있습니다.

  # 제한사항
  - 3 ≤ n ≤ 1,000,000

  # 입출력 예
  n	    result
  10	  3
  12	  11

  # 입출력 예 설명
  입출력 예 #1
  10을 3으로 나눈 나머지가 1이고, 3보다 작은 자연수 중에서 문제의 조건을 만족하는 수가 없으므로, 3을 return 해야 합니다.

  입출력 예 #2
  12를 11로 나눈 나머지가 1이고, 11보다 작은 자연수 중에서 문제의 조건을 만족하는 수가 없으므로, 11을 return 해야 합니다.
*/

const n = 10;

const solutionFirst = (n) => {
  for (let x = 2; x < n; x++) {
    if (n % x === 1) return x;
  }
};

console.log(solutionFirst(n));

/*
  # 문제풀이 - solutionFirst

  1. for문을 사용하여 반복하는데 제한조건 중 n은 3이상이기 때문에 나누는 수인 x의 초기값은 2가 된다.
  2. 반복문 내부 조건문에 조건은 나머지가 1인 경우가 된다. 나머지가 1인 경우 나누는 수인 x를 출력한다.
*/

const solutionSecond = (n, x = 1) => {
  while (x++) {
    if (n % x === 1) {
      return x;
    }
  }
};

console.log(solutionSecond(n));

/*
  # 문제풀이 - solutionSecond

  1. while문을 사용하여 반복하는데 제한조건 중 n은 3이상이기 때문에 나누는 수인 x의 초기값은 2가 된다. 이 때 while문 조건이 증감이므로 반복문 진입 시 바로 증감하기때문에 x는 1로 초기화시킨다.
  2. 반복문 내부 조건문에 조건은 나머지가 1인 경우가 된다. 나머지가 1인 경우 나누는 수인 x를 출력한다.
*/

/*
  # 문제풀이 비교
  (1) 실행 속도 : test02 > test01
  (2) 코드의 길이 : test02 = test01
  (3) 가독성 : test02 > test01
*/

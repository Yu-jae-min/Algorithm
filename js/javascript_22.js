/*
  # 문제
  문자열 내림차순으로 배치하기

  # 문제 설명
  문자열 s에 나타나는 문자를 큰것부터 작은 순으로 정렬해 새로운 문자열을 리턴하는 함수, solution을 완성해주세요.
  s는 영문 대소문자로만 구성되어 있으며, 대문자는 소문자보다 작은 것으로 간주합니다.

  # 제한 조건
  str은 길이 1 이상인 문자열입니다.

  # 입출력 예
  s	          return
  "Zbcdefg"	  "gfedcbZ"
*/

const test01 = (s) => {
  return s.split('').sort().reverse().join('');
};

console.log(test01("Zbcdaefg")); // gfedcbaZ

/*
  # 문제풀이 - test01
  1. split메서드로 문자를 잘라 배열에 담았다.
  2. sort메서드로 파라미터를 주지 않고 오름차순으로 정렬하였다.
  3. reverse메서드로 정렬 된 배열을 내림차순으로 뒤집었다.
  4. join메서드로 배열을 문자로 합쳐주었다.
*/

const test02 = (s) => {
  return s.split('').sort((a, b) => {
    return a > b ? -1 : a < b ? 1 : 0
  }).join('')
};

console.log(test02("Zbcdaefg")); // gfedcbaZ

/*
  # 문제풀이 - test02
  1. split메서드로 문자를 잘라 배열에 담았다.
  2. sort메서드를 사용하였는데 문자열 비교를 위해 삼항 연산자로 a와 b의 크기를 비교하였다. a가 b보다 큰 경우 -1(내림차순, b-a)을 리턴하고
  a가 b보다 작은 경우 1(오름차순, a-b)을 리턴하고 아닌 경우 0(유지)을 리턴하도록 하였다.
  3. join메서드로 배열을 문자로 합쳐주었다.
*/

/*
  # 문제풀이 비교
  함수 실행 속도 : test02 > test01
  함수 실행 속도는 test02가 조금 더 빨랐다. 하지만 삼항 연산자를 중첩으로 사용하여 가독성은 좋지 못한 것 같았다.
  test01의 경우 직관적으로 어떠한 값이 나올 지 유추해볼 수 있었으며 코드의 길이도 더 짧았다.
*/
